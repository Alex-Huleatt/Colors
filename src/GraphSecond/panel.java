/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GraphSecond;

import java.awt.Color;
import java.awt.Graphics;
import java.util.Arrays;

/**
 *
 * @author Alex
 */
public class panel extends javax.swing.JPanel {

    public Point[] obstacles;
    public Point[] pathPoints;
    public Point[] vertices;
    public Edge[] edges;

    /**
     * Creates new form panel
     */
    public panel() {
        initComponents();
        obstacles = new Point[0];
        pathPoints = new Point[0];
        vertices = new Point[0];
        edges = new Edge[0];
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public void paint(Graphics g) {
        g.setColor(Color.gray);
        g.fillRect(0, 0, getWidth(), getHeight());
        g.setColor(Color.red);
        for (Point p : obstacles) {
            g.fillRect(p.x * frame.size, p.y * frame.size, frame.size, frame.size);
        }
        g.setColor(Color.magenta);
        for (Point p : vertices) {
            g.fillRect(p.x * frame.size, p.y * frame.size, frame.size, frame.size);
        }
        for (Edge e : edges) {
            g.drawLine(e.p1.x * frame.size + frame.size / 2, e.p1.y * frame.size + frame.size / 2, e.p2.x * frame.size + frame.size / 2, e.p2.y * frame.size + frame.size / 2);
        }

        g.setColor(Color.blue);
        System.out.println(Arrays.toString(pathPoints));
        if (pathPoints != null) {
            for (Point p : pathPoints) {
                if (p != null) {
                    g.fillRect(p.x * frame.size, p.y * frame.size, frame.size, frame.size);
                }
            }
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
